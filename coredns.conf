.:53 {
    # The domain name of the coredns servers and their corresponding IP addresses are
    # contained in the hosts file. This is necessary for automatic creation of PTR
    # records of coredns servers. The hosts file may contain other records, but this is
    # not recommended.
    hosts /etc/coredns/records/hosts {
        fallthrough
    }

    # Forwards public DNS queries to Cloudflare and Google DoT (DNS over TLS) servers.
    forward . 127.0.0.1:5301 127.0.0.1:5302 {
        policy round_robin
    }
}

(default) {
    prometheus 0.0.0.0:{$PROMETHEUS_PORT}
    errors
}

.:5301 {
    import default

    forward . tls://1.1.1.1 tls://1.0.0.1 {
        tls_servername cloudflare-dns.com
    }
}

.:5302 {
    import default

    forward . tls://8.8.8.8 tls://8.8.4.4 {
        tls_servername dns.google
    }
}

# The configuration of the subdomains served by the Consul agent is in an
# external file, since this configuration file is mounted at startup and
# depends on the host, namely the Consul agent.
import conf.d/consul.conf

# The zone declared in the COREDNS_HOSTEDZONE environment contains records of enterprise
# resources and services.
{$COREDNS_HOSTEDZONE}:53 {
    import default

    log . {
        class error
    }

    # For convenient management of DNS records, records for this zone are located on
    # Route53 and are periodically synchronized.
    route53 {$COREDNS_HOSTEDZONE}.:{$COREDNS_HOSTEDZONE_ID}
}

# The zone declared in the COREDNS_CLOUD_HOSTEDZONE environment contains records of the
# private cloud's internal resources and services. These resources include vCenter
# virtual appliance, ESXi hosts, etc.
{$COREDNS_CLOUD_HOSTEDZONE}:53 {
    # For convenient management of DNS records, records for this zone are located on
    # Route53 and are periodically synchronized. Because these records change very
    # rarely, the synchronization time has been increased to one hour to reduce the
    # number of API requests.
    route53 {$COREDNS_CLOUD_HOSTEDZONE}.:{$COREDNS_CLOUD_HOSTEDZONE_ID} {
        refresh 1h
    }

    acl {
        allow net {$COREDNS_ACL_TRUSTED_SUBNET}
        allow net {$COREDNS_ACL_ADDITIONAL_TRUSTED_SUBNET}
        block
    }
}
