name: Docker Image

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE }}
        role-session-name: ecs-anywhere-coredns.actions.session
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2
      id: login-ecr

    - name: Build and push Docker image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        BUILD_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')

        docker build \
          --tag ${{ env.REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY }}:$BUILD_VERSION \
          --tag ${{ env.REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY }}:latest \
          --label "org.opencontainers.image.created=$BUILD_DATE" \
          --label "org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}" \
          --label "org.opencontainers.image.version=$BUILD_VERSION" \
          --label "org.opencontainers.image.revision=${{ github.sha }}" \
          --label "org.opencontainers.image.title=ECS Anywhere CoreDNS" \
          --label "org.opencontainers.image.licenses=MIT" .

        docker push ${{ env.REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY }} --all-tags
